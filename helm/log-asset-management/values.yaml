# Default values for log-asset-management

replicaCount: 2

image:
  frontend:
    repository: log-frontend
    pullPolicy: IfNotPresent
    tag: "latest"
  backend:
    repository: log-backend
    pullPolicy: IfNotPresent
    tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1001

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1001

service:
  type: ClusterIP
  frontend:
    port: 80
    targetPort: 80
  backend:
    port: 3001
    targetPort: 3001

ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  hosts:
    - host: log.example.com
      paths:
        - path: /api
          pathType: Prefix
          service: backend
        - path: /
          pathType: Prefix
          service: frontend
  tls:
    - secretName: log-tls
      hosts:
        - log.example.com

resources:
  frontend:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  backend:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                  - log-asset-management
          topologyKey: kubernetes.io/hostname

# PostgreSQL configuration
postgresql:
  enabled: true
  auth:
    username: loguser
    password: changeme
    database: logdb
  primary:
    persistence:
      enabled: true
      size: 10Gi
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi

# Application configuration
config:
  backend:
    nodeEnv: production
    jwtSecret: "change-me-in-production"
    sessionSecret: "change-me-in-production"
    corsOrigin: "https://log.example.com"
  oauth:
    github:
      clientId: ""
      clientSecret: ""
    google:
      clientId: ""
      clientSecret: ""
    apple:
      clientId: ""
      clientSecret: ""
